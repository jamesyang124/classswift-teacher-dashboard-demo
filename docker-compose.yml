version: '3.8'

services:
  # Frontend - Vite React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/src:/app/src
    environment:
      - VITE_API_BASE_URL=http://localhost:3000/api/v1
      - VITE_APP_VERSION=1.1.7
      - VITE_DEMO_MODE=true
    depends_on:
       - backend
    develop:
      watch:
        - action: sync
          path: ./frontend/src
          target: /app/src
        - action: rebuild
          path: ./frontend/package.json
        - action: rebuild
          path: ./frontend/node_modules

  # Backend - Go Gin API with Docker Compose watch mode
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
      no_cache: true
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - HOST=localhost
      - TLS_MODE=false
      - DATABASE_URL=postgres://classswift:password@db:5432/classswift_dev?sslmode=disable
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=http://localhost:5173
      - CLASS_REDIRECTION_BASE_URL=https://www.classswift.viewsonic.io
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend
          ignore:
            - ./backend/tmp/
            - ./backend/bin/

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=classswift_dev
      - POSTGRES_USER=classswift
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U classswift -d classswift_dev"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Redis for Session Storage and WebSocket State
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer for Database Administration (commented out for frontend-first development)
  # adminer:
  #   image: adminer:latest
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=db
  #   depends_on:
  #     - db
  #   profiles:
  #     - dev-tools

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: classswift-network